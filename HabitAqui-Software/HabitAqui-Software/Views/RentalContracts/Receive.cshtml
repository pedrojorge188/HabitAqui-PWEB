@model HabitAqui_Software.Models.ViewModels.ReceiveRentalContract

@{
    ViewData["Title"] = "Receber Habitação";
}

<h1>Receber Habitação de um Cliente</h1>
<br />
<hr />

<div class="row">
    <div class="col-md-8">
        <form asp-action="Receive" method="post" enctype="multipart/form-data" class="border p-4 bg-dark text-light">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="rentalContract.Id" />

            <div class="form-group">
                <div class="form-check">
                    <input asp-for="hasEquipments" class="form-check-input"/>
                    <label asp-for="hasEquipments" class="form-check-label">Existência de Equipamentos</label>
                </div>
            </div>

            <div class="form-group mt-3">
                <div class="form-check">
                    <input asp-for="hasDamage" class="form-check-input" id="hasDamage" />
                    <label asp-for="hasDamage" class="form-check-label">Existência de Danos Extra</label>
                </div>
            </div>
            <br />

            <div id="equipmentDetails" style="display: none;">
                <h3>Equipamentos Devolvidos</h3>
                @if (Model.rentalContract.deliveryStatus != null && Model.rentalContract.deliveryStatus.hasEquipments)
                {
                    var confirmedEquipments = Model.rentalContract.deliveryStatus.EquipmentList.Split(';').ToList();

                    foreach (var equipment in confirmedEquipments)
                    {
                        <div class="form-check">
                            <input type="checkbox" class="form-check-input" id="@equipment" name="equipments" value="@equipment">
                            <label class="form-check-label" for="@equipment">@equipment</label>
                        </div>
                    }
                }
            </div>
            <br />

            <div class="form-group mt-2">
                <label asp-for="observation" class="control-label">Observações</label>
                <textarea asp-for="observation" class="form-control bg-dark text-light" rows="3"></textarea>
            </div>
            <br />
            
            <div id="damageDetails" style="display: none;">
                <div class="form-group mt-2">
                    <label asp-for="damageDescription" class="control-label">Descrição dos Danos Extra</label>
                    <textarea asp-for="damageDescription" class="form-control bg-dark text-light" rows="3"></textarea>
                </div>
                <br />

                <div class="form-group">
                    <label asp-for="DamageImages" class="control-label">Fotos dos Danos Extra</label>
                    <input asp-for="DamageImages" type="file" multiple class="form-control bg-dark text-light" />
                </div>
            </div>

            <div class="form-group mt-3">
                <a asp-action="Index" class="btn btn-primary tb-btn">Voltar</a>
                <input type="submit" value="Confirmar Recebimento" class="btn btn-primary ml-2" />
            </div>
        </form>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const hasDamageCheckbox = document.getElementById("hasDamage");
            const damageDetailsDiv = document.getElementById("damageDetails");

            function toggleDamageDetails() {
                damageDetailsDiv.style.display = hasDamageCheckbox.checked ? "block" : "none";
            }

            hasDamageCheckbox.addEventListener("change", toggleDamageDetails);

            // Inicializa com o estado atual do checkbox
            toggleDamageDetails();

            const hasEquipmentsCheckbox = document.getElementById("hasEquipments");
            const equipmentDetailsDiv = document.getElementById("equipmentDetails");

            function toggleEquipmentDetails() {
                equipmentDetailsDiv.style.display = hasEquipmentsCheckbox.checked ? "block" : "none";
            }

            hasEquipmentsCheckbox.addEventListener("change", toggleEquipmentDetails);

            // Inicializa com o estado atual do checkbox
            toggleEquipmentDetails();
        });
    </script>
}