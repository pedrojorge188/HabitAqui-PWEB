﻿@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item dropdown">
            <a class="nav-item nav-link" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @User.Identity?.Name.Split('@')[0]!</a>
        </li>
        <li class="nav-item dropdown">
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button type="submit" class="nav-item nav-link btn btn-link text-white">Logout</button>
            </form>
        </li>
    }
    else
    {
        <div class="form-group">
            <div class="dropdown">
                <button class="btn btn-dark bg-dark dropdown-toggle" type="button" id="authDropdown" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    <i class="fa-solid fa-user"></i> Conta
                </button>
                <div class="dropdown-menu" aria-labelledby="authDropdown">
                    <a class="dropdown-item" href="@(Url.Page("/Account/Register", null, new { area = "Identity" }))">Registo</a>
                    <a class="dropdown-item" href="@(Url.Page("/Account/Login", null, new { area = "Identity" }))">Entrar</a>
                </div>
            </div>
        </div>

    }
</ul>